- name: Download Tomcat
  get_url:
    url: "{{tomcat_download_url}}"
    dest: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"
    mode: '0644'
    validate_certs: false
  when:
    - ansible_os_family in ["RedHat", "Rocky"]
    - ansible_distribution_major_version in ["8", "9"]
    - tomcat_version is defined   

- name: Ensure Tomcat root directory exists
  file:
    path: "/u01/Tomcat"
    state: directory
    mode: '0755'

- name: Remove existing Tomcat version folder if present
  file:
    path: "/u01/Tomcat/Tomcat{{ tomcat_version }}"
    state: absent
  ignore_errors: yes

- name: Extract Tomcat tarball to temp folder
  unarchive:
    src: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"
    dest: "/u01/Tomcat"
    remote_src: yes

- name: Rename extracted folder to standard name
  command: mv "/u01/Tomcat/apache-tomcat-{{tomcat_full_version}}" "/u01/Tomcat/Tomcat{{ tomcat_version }}"
  args:
    creates: "/u01/Tomcat/Tomcat{{ tomcat_version }}"
 
  
- name: Set ownership and permissions on Tomcat folder
  file:
    path: "/u01/Tomcat/Tomcat{{ tomcat_version }}"
    state: directory
    recurse: yes
    owner: "{{tomcat_user}}"
    group: "{{tomcat_group}}"
    
- name: Make all Tomcat .sh scripts executable
  shell: chmod +x /u01/Tomcat/Tomcat{{ tomcat_version }}/bin/*.sh
  args:
    executable: /bin/bash

- name: Copy conf/ directory from CATALINA_HOME to CATALINA_BASE
  copy:
    src: "/u01/Tomcat/Tomcat{{ tomcat_version }}/conf/"
    dest: "/u01/Tomcat/tomcat-{{ app_name }}/conf/"
    owner: tomcat
    group: tomcat
    mode: '0755'
   
    remote_src: yes


- name: Copy default ROOT webapp from CATALINA_HOME
  copy:
    src: "/u01/Tomcat/Tomcat{{ tomcat_version }}/webapps/ROOT"
    dest: "/u01/Tomcat/tomcat-{{ app_name }}/webapps/"
    owner: tomcat
    group: tomcat
    mode: '0755'
    remote_src: yes
  notify: restart tomcat    
    
