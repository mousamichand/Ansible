---
- name: Install and configure PostgreSQL
  hosts: all
  become: true
  vars:
    postgresql_version: 15
    postgresql_data_dir: /var/lib/pgsql/{{ postgresql_version }}/data
    postgresql_service: postgresql-{{ postgresql_version }}
    postgres_password : ""
  
  tasks:        
    - name: Print the ansible_os_family fact
      ansible.builtin.debug:
        msg: "The OS family is: {{ ansible_os_family }}"
    - name: Install PostgreSQL GPG key
      ansible.builtin.rpm_key:
        state: present
        key: https://download.postgresql.org/pub/repos/yum/keys/PGDG-RPM-GPG-KEY-RHEL
      when: ansible_os_family == "RedHat"
    - name: Install PostgreSQL repository
      ansible.builtin.yum:
        name: https://download.postgresql.org/pub/repos/yum/reporpms/EL-{{ ansible_distribution_major_version }}-x86_64/pgdg-redhat-repo-latest.noarch.rpm
        state: present
      when: ansible_os_family == "RedHat"

    - name: Install PostgreSQL
      ansible.builtin.yum:
        name: 
          - postgresql{{ postgresql_version }}
          - postgresql{{ postgresql_version }}-server
          - postgresql{{ postgresql_version }}-contrib
        state: present
      when: ansible_os_family == "RedHat"

    - name: Initialize PostgreSQL Database
      ansible.builtin.command: "/usr/pgsql-{{ postgresql_version }}/bin/postgresql-{{ postgresql_version }}-setup initdb"
      when: ansible_os_family == "RedHat"

    - name: Ensure PostgreSQL service is running and enabled
      ansible.builtin.systemd:
        name: "{{ postgresql_service }}"
        enabled: yes
        state: started
      when: ansible_os_family == "RedHat"
     
    - name: Set up PostgreSQL repository for Ubuntu
      lineinfile:
        path: /etc/apt/sources.list.d/pgdg.list
        line: "deb http://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main"
        create: true
      when: ansible_facts['os_family'] == 'Debian'
      
        
    - name: Add PostgreSQL APT repository key for Ubuntu
      when: ansible_facts['os_family'] == 'Debian'
      apt_key:
        url: 'https://www.postgresql.org/media/keys/ACCC4CF8.asc'
        state: present

    - name: Install PostgreSQL for Ubuntu
      when: ansible_facts['os_family'] == 'Debian'
      apt:
        name: postgresql-{{ postgresql_version }}
        state: present
        update_cache: yes
    - name: Ensure PostgreSQL service is running and enabled on Debian/Ubuntu
      when: ansible_facts['os_family'] == 'Debian'
      ansible.builtin.systemd:
        name: postgresql
        enabled: yes
        state: started     
    - name: Modify pg_hba.conf to use md5 authentication for all local connections
      ansible.builtin.replace:
        path: /var/lib/pgsql/{{ postgresql_version }}/data/pg_hba.conf
        regexp: '^local\s+all\s+all\s+peer$'
        replace: 'local   all             all                                     md5'
      notify: Reload PostgreSQL
      when: ansible_os_family == "RedHat"

    - name: Modify pg_hba.conf to use md5 authentication for all local connections (Debian/Ubuntu)
      ansible.builtin.replace:
        path: /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
        regexp: '^local\s+all\s+all\s+peer$'
        replace: 'local   all             all                                     md5'
      notify: Reload PostgreSQL
      when: ansible_os_family == "Debian" 
      
    - name: Ensure the postgres user has a password
      postgresql_user:
        name: postgres
        password: "{{ 'Test123' | password_hash('md5') }}"
        encrypted: yes  # Ensure the password is hashed (md5 for PostgreSQL)
      # Only apply if the password is not already set
      when: not postgres_password_set

    - name: Verify that the postgres user password is set
      shell: psql -c "SELECT 1"
      register: result
      failed_when: result.rc != 0
      changed_when: false
      become_user: postgres

    - name: Set postgres_password_set variable
      set_fact:
        postgres_password_set: "{{ result.rc == 0 }}"
    
     
      
   
    - name: Create a PostgreSQL database
      community.postgresql.postgresql_db:
        name: testdb123
        login_user: postgres
        login_password: "Test123" 
     
  handlers:
    - name: Reload PostgreSQL
      ansible.builtin.systemd:
        name: "{{ postgresql_service }}"
        state: reloaded 
