---
- name: Install and configure PostgreSQL
  hosts: all
  become: true
  vars:
    postgresql_version: 15
    postgresql_data_dir: /var/lib/pgsql/{{ postgresql_version }}/data
    postgresql_service: postgresql-{{ postgresql_version }}
    
  tasks:
    - name: Install PostgreSQL repository RPM for RHEL 8 and CentOS
      when: ansible_facts['os_family'] == 'RedHat'
      rpm_key:
        state: present
        key: https://download.postgresql.org/pub/repos/yum/RPM-GPG-KEY-PGDG
        
    - name: Install PostgreSQL repository
      ansible.builtin.yum:
        name: https://download.postgresql.org/pub/repos/yum/reporpms/EL-{{ ansible_distribution_major_version }}-x86_64/pgdg-redhat-repo-latest.noarch.rpm
        state: present
        enabled: yes
        gpgcheck: yes
        gpgkey: https://download.postgresql.org/pub/repos/yum/RPM-GPG-KEY-PGDG

      when: ansible_os_family == "RedHat"

    - name: Install PostgreSQL
      ansible.builtin.yum:
        name: 
          - postgresql{{ postgresql_version }}
          - postgresql{{ postgresql_version }}-server
          - postgresql{{ postgresql_version }}-contrib
        state: present
      when: ansible_os_family == "RedHat"

    - name: Initialize PostgreSQL Database
      ansible.builtin.command: "/usr/pgsql-{{ postgresql_version }}/bin/postgresql-{{ postgresql_version }}-setup initdb"
      when: ansible_os_family == "RedHat"

    - name: Ensure PostgreSQL service is running and enabled
      ansible.builtin.systemd:
        name: "{{ postgresql_service }}"
        enabled: yes
        state: started
        
    - name: Add PostgreSQL APT repository key for Ubuntu
      when: ansible_facts['os_family'] == 'Debian'
      apt_key:
        url: 'https://www.postgresql.org/media/keys/ACCC4CF8.asc'
        state: present

    - name: Install PostgreSQL for Ubuntu
      when: ansible_facts['os_family'] == 'Debian'
      apt:
        name: postgresql-{{ postgresql_version }}
        state: present
        update_cache: yes
    - name: Install PostgreSQL client on Debian/Ubuntu
      ansible.builtin.apt:
        name: 
          - postgresql-client
        state: present
      when: ansible_os_family == "Debian"

    - name: Ensure PostgreSQL service is running and enabled on Debian/Ubuntu
      ansible.builtin.systemd:
        name: postgresql
        enabled: yes
        state: started
      when: ansible_os_family == "Debian" 

    - name: Install PostgreSQL client on RedHat/CentOS
      ansible.builtin.yum:
        name: 
          - postgresql{{ postgresql_version }}-client
        state: present
      when: ansible_os_family == "RedHat"

    - name: Create a PostgreSQL database
      community.postgresql.postgresql_db:
        name: exampledb
        state: present

    - name: Create a PostgreSQL user
      community.postgresql.postgresql_user:
        name: exampleuser
        password: secretpassword
        priv: "ALL"
        state: present

    - name: Grant privileges on the database
      community.postgresql.postgresql_privs:
        database: exampledb
        roles: exampleuser
        type: database
        privs: ALL
